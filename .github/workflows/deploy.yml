name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python -m unittest discover -s tests

# name: Backend CI/CD Pipeline

# on:
#   push:
#     branches:
#       - backend

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Setup Python
#       uses: actions/setup-python@v2
#       with:
#         python-version: '3.x'

#     - name: Install dependencies
#       run: |
#         pip install -r requirements.txt

#     - name: Run unit tests
#       run: |
#         python -m unittest test_main_app.py

#   deploy:
#     runs-on: ubuntu-latest
#     needs: test # Este paso asegura que 'deploy' solo se ejecuta si 'test' pasa correctamente.

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Setup SSH
#       env:
#         EC2_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#         SERVER_IP: ${{ secrets.BACKEND_SSH_HOST }}
#         EC2_USER: ${{ secrets.BACKEND_USER_NAME }}
#         APP_DIR: /home/ubuntu/Parcial-Arquitectura-AWS-Big-Data
#       run: |
#         echo "$EC2_PRIVATE_KEY" | tr -d '\r' > ec2_key
#         chmod 600 ec2_key

#     - name: Deploy to EC2
#       env:
#         SERVER_IP: ${{ secrets.BACKEND_SSH_HOST }}
#         EC2_USER: ${{ secrets.BACKEND_USER_NAME }}
#         APP_DIR: /home/ubuntu/Parcial-Arquitectura-AWS-Big-Data
#       run: |
#         scp -o StrictHostKeyChecking=no -i ec2_key -r ./* ${EC2_USER}@${SERVER_IP}:${APP_DIR}

#         ssh -o StrictHostKeyChecking=no -i ec2_key ${EC2_USER}@${SERVER_IP} '
#             cd ${APP_DIR} &&
#             source env/bin/activate &&
#             pip install -r requirements.txt &&
#             # Puedes ajustar el siguiente comando si necesitas iniciar tu aplicaci√≥n de otra manera
#             python main_app.py
#         '
