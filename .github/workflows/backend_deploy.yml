name: Backend Deploy

on:
  push:
    branches:
      - backend

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Run unit tests
      run: |
        python -m unittest test_main_app.py

  deploy:
    runs-on: ubuntu-latest
    needs: test # Este paso asegura que 'deploy' solo se ejecuta si 'test' pasa correctamente.

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup SSH and deploy to EC2
      env:
        EC2_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SERVER_IP: ${{ secrets.BACKEND_SSH_HOST }}
        EC2_USER: ${{ secrets.BACKEND_USER_NAME }}
        APP_DIR: /home/ubuntu/Parcial-Arquitectura-AWS-Big-Data  # Cambia a la ubicación del proyecto en la instancia EC2
      run: |
        echo "$EC2_PRIVATE_KEY" | tr -d '\r' > ec2_key
        chmod 600 ec2_key
        ssh -o StrictHostKeyChecking=no -i ec2_key ${EC2_USER}@${SERVER_IP} '
            # Acceder al directorio del proyecto
            cd Parcial-Arquitectura-AWS-Big-Data &&

            # Activar el entorno virtual si es necesario
            source env/bin/activate &&

            # Sincronizar los últimos cambios del repositorio
            git fetch --all &&
            git reset --hard origin/backend &&
            git pull origin backend &&

            # Instalar dependencias necesarias
            pip install -r requirements.txt &&
            
            # Detener instancias previas de Gunicorn si existen
            pkill gunicorn || true

            # Ejecuta la aplicación con Gunicorn
            gunicorn -b 0.0.0.0:5000 main_app:app --daemon
        '
