name: Deploy Frontend

on:
  push:
    branches:
      - frontend  # Rama en la que quieres que se ejecute el despliegue

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.x'  # O la versión de Node.js que estés usando

    - name: Install dependencies
      run: |
        npm install

    - name: Build application
      run: |
        npm run build

    - name: Copy files to EC2
      env:
        EC2_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SERVER_IP: ${{ secrets.FRONTEND_SSH_HOST }}
        EC2_USER: ${{ secrets.FRONTEND_USER_NAME }}
        BUILD_DIR: build  # Directorio de salida de la construcción de React
        APP_DIR: /var/www/html  # Cambia a la ubicación en tu servidor EC2 donde se sirven los archivos estáticos
      run: |
        echo "$EC2_PRIVATE_KEY" | tr -d '\r' > ec2_key
        chmod 600 ec2_key
        rsync -avz -e "ssh -i ec2_key -o StrictHostKeyChecking=no" $BUILD_DIR/ ${EC2_USER}@${SERVER_IP}:${APP_DIR}/

    - name: Restart server
      env:
        EC2_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SERVER_IP: ${{ secrets.FRONTEND_SSH_HOST }}
        EC2_USER: ${{ secrets.FRONTEND_USER_NAME }}
      run: |
        echo "$EC2_PRIVATE_KEY" | tr -d '\r' > ec2_key
        chmod 600 ec2_key
        ssh -o StrictHostKeyChecking=no -i ec2_key ${EC2_USER}@${SERVER_IP} '
          sudo systemctl restart apache2  # O el comando para reiniciar tu servidor web
        '
